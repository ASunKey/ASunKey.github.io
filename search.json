[{"title":"Suno.ai教程","path":"/2024/0329/suno-ai-tutorial/","content":"Suno.ai教程 玩音乐的人写的Suno.ai教程就是不一样！全球大模型汇总清单(持续更新)；深度盘点文生图&amp;文生视频；AI Native工作流即将崛起 | ShowMeAI日报 - 知乎 Excerpt日报&amp;周刊合集 | 生产力工具与行业应用大全 | 点赞关注评论拜托啦！ YC官网公布 4000+ 创业公司详细信息，20年追风逐浪https://www.ycombinator.com/companies 补充一份背景：Y Combinator (简称YC) 是全球知… 玩音乐的人写的 Suno 教程就是不一样：真正的从0到1，顺带补乐理知识 https://www.suno.ai 补充一份背景：Suno.ai 是一个基于AI的音乐创作平台，可以根据用户输入的简单提示词生成带有伴奏和人声的音乐，自发布之后就疯狂刷榜 因为生成的音乐真的很！好！听！我们曾经在 ⋙ 这篇日报 里介绍过 Suno.ai 和 匹配的提示词教程 但是！社群的小伙伴在一起玩时，遇到了一个很棘手的问题：怎么把生成的片段拼成一首完整的歌呢？ 这就要熟练地结合乐理知识来设计提示词了？！嘶……感觉需要很深的行业 Know-How 哇 ♀️ 然后这篇教程就出现了！作者用 7500 字非常详细地介绍了 Suno 的使用方法，从最基础的操作界面讲起，细致列出了音乐领域提示词技巧，介绍了最常用的辅助工具和拓展资源，还整理了常见问题与解决方案！！最难得的是，在涉及到乐理知识的部分有简明扼要的补充，帮助我们快速 get 操作的背后原理 也就是说，跟着这份教程操作，我们真的可以搞定「提示词 → 音乐片段 → 一首完整歌」的全部流程啦！ 这样具有行业知识的高水平的教程，请多来一点，我们真的很需要！ ⋙ 阅读原文 Chirp 是 Suno 公司发布的「文本生成音乐」模型，目前已经进化到 Chirp V2 版本 Part 1-2: 简介 &amp; Chirp 操作流程 ▢ 网页版最大生成时长1分20秒，延续最大时长60秒▢ Explore、Create、Library、Credits、Subscribe 的页面布局和详细介绍 Part 3: Chirp 基础知识 Chirp 支持的语言：支持多种语言，并且能够自动检测并使用正确的语言进行演唱 **元标签 (Metatags)**：元标签是一种特殊的提示，用于在创作内容时提供方向性指引 两类特色功能▢ **风格提示 (Style Prompting)**：在提示框中输入完整的句子，或者由逗号隔开的一系列乐器、音乐元素、流派、风格词汇▢ ⭐ 写好风格提示词的建议和注意事项▢ **歌词提示 (Lyric Prompting)**：通过元标签来引导后面的歌词、歌曲结构、音乐风格，一定程度上为歌词提示功能减负▢ ⭐ 歌词提示的书写格式▢ ⭐ 知识科普：歌词结构包含 Intro (引子或前奏)、Verse (诗歌部分 &#x2F; 主歌)、Chorus (合唱部分 &#x2F; 副歌)、Bridge (桥接部分)、Outro (尾奏)、Pre-Chorus (前副歌)(可选) 、间奏 (Interlude)(可选) Part 4: 辅助工具 Sonoteller▢ https://sonoteller.ai▢ 智能的音乐分析网站，输入 YouTube 链接可生成包含歌曲的分析报告 Every noise at once▢ https://everynoise.com▢ 音乐流派分类网站，点击流派名称就可以播放对应的音乐示例 Chosic▢ https://www.chosic.com▢ 提供音乐信息和强大的搜索功能 音乐术语查询器▢ https://nicechord.com/terms▢ 通过搜索栏查找音乐术语的定义 维基百科音乐术语大全▢ https://en.wikipedia.org/wiki/Glossary_of_music_terminology▢ 提供详细的音乐术语解释和相关信息 Part 5: Chirp 进阶知识 Chirp的采样特性：在第一个生成片段的最后10秒进行采样并应用于后续片段，保持歌曲的连贯性和一致性 元标签的书写技巧：支持不同格式的括号，内容可以是名词、形容词+名词、句子(尽可能短) 等▢ ⭐ 常用格式清单 Part 6: 实战 歌曲生成▢ 使用常见的歌曲结构 [intro]—[verse 1]—[chorus]—[verse 2]—[chorus]—[bridge]—[chorus]—[outro]▢ ⭐ 前奏：生成「独立前奏」的四种操作方法，解决前奏过长或不唱歌词的方法，指定乐器演奏的方法▢ ⭐ 主歌与副歌：主歌与副歌之间自然过渡的方法▢ ⭐ 结尾部分：控制生成需要的尾奏 纯音乐生成▢ ⭐ 生成纯音乐的两种操作方法▢ ⭐ 生成没有人声的伴奏的两种操作方法 Part 7: 更多 SunoBeats GPTs：质量很高，尤其对流派和风格的把控很准，能满足日常需求 非官方Suno wiki：https://www.notion.so/suno-ai-wiki/4e24aa838bf84fffaf383b1f9ed50748 Part 8: 常见问题与解决方案 ▢ 歌词延续：如果歌词被切断，应在下一个片段中接上，但避免重复使用被中断的元标签▢ 器乐过渡：在器乐部分结束后，可以通过添加语气词或使用特定的元标签来提示Chirp进入歌词部分▢ 生成错误：如果遇到“无法生成”或“尝试另一个提示”的错误，可能是由于版权、使用真实乐队或艺术家名称、违规词汇或积分用尽等原因 提示词参考一个好的谱曲的提示词可以包含以下几个要素，可以根据自己的需要增减，这里只是提供一些参考 风格 + 情感 + 乐器 + 节奏 + 人声 1、风格：流行(Pop)，古典(Classical)，爵士(Jazz)，电子(Electronic)，摇滚(Rock)，乡村(Country)，民谣(Folk)，嘻哈(Hip-hop)，布鲁斯(Blues)，拉丁(Latin) 2、情感：欢快(Cheerful)，悲伤(Sad)，浪漫(Romantic)，激昂(Passionate)，温柔(Gentle)，忧郁(Melancholic)，神秘(Mysterious)，紧张(Tense)，恐怖(Horrifying)，宁静(Peaceful) 3、乐器：钢琴(Piano)，吉他(Guitar)，小提琴(Violin)，鼓(Drum)，贝斯(Bass)，长笛(Flute)，萨克斯(Saxophone)，小号(Trumpet)，大提琴(Cello)，口琴(Harmonica) 4、节奏：快速(Fast)，慢速(Slow)，中等(Medium)，渐快(Accelerating)，渐慢(Decelerating)，自由(Free)，稳定(Steady)，跳跃(Jumpy)，拖延(Dragging)，犹豫(Hesitant) 5、人声：男声(Male vocals)，女声(Female vocals)，童声(Children’s vocals)，合唱(Choir)","tags":["人工智能","AIGC","LLM（大型语言模型）"],"categories":["经验SOP"]},{"title":"Hexo及主题的使用和修改","path":"/2024/0321/Using-and-Modifying-Hexo/","content":"关掉 hexo 自带的代码高亮主题内置了主题高亮，所以需要禁用 hexo 自带的高亮我使用的hexo版本是7.0.0+ 12# _config.ymlsyntax_highlighter: # empty 配置主题下_config.yml中的高亮设置：可以根据提示，配置喜欢的高亮主题 1 分类排序默认按照首字母正序排序，由于中文在 nodejs 环境下不能按照拼音首字母排序，所以添加了自定义排序方式，在主题下 _config.yml 中找到如下配置，category.sort则是定义分类顺序的。 规则：在 sort中定义的 category 比 没有在 sort 中定义的更靠前 123456789101112# 文章分类设置category: num: true # 分类显示文章数 sub: true # 开启多级分类 sort: - 读书 - 大前端 - 后端 - 数据库 - 工具 - 运维 文章排序文章列表默认按照创建时间（如下文章内定义的date）倒序。 使用 top 将会置顶文章，多个置顶文章时，top 定义的值越大，越靠前。 123456789---title: 每天一个linux命令date: 2017-01-23 11:41:48top: 1categories:- 运维tags:- linux命令--- 关于写文章每篇文章最好写上文集和标签，方便筛选和查看。一般推荐一篇文章设置一个文集，一个或多个标签categories:文集，为左侧列表tags:标签，通过#来筛选例如 本篇文章的设置 123456789---title: 3-hexo使用说明date: 2017-03-23 15:13:47categories:- 工具tags:- hexo- 3-hexo--- 设置模板1.设置模板，blog根目录 scaffolds/post.md加入categories,tags等，这样以后通过 hexo new 生成的模板就不用写这两个单词了。当然，你也可以写入任何你每个文章中都会有的部分。 123456---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;categories:tags:---","tags":["Hexo"],"categories":["经验SOP"]},{"title":"我的电子阅读史","path":"/2024/0320/electronic-reading-history/","content":"电子阅读时间 电子阅读时间 Kindle 得到总时长：2286小时 多看：1428小时 微信读书：1383小时 微信听书：166小时，还有其他音频APP上面也主要是听书吧。 听书模式 听书是可以练习的，只是输入方式不同而已，可以听 那种整本的书， 但像得到的30分钟听书，这类的，只是花钱和时间买书籍推荐而已，不要听。 还有 故事类的 可以全转为听书，这样可以解放双眼，通勤时，开车时，干家务时，都可以听。 本文档链接","tags":["无签"],"categories":["未归类"]},{"title":"听（Listening）、说（Speaking）、读（Reading）、写（Writing）","path":"/2024/0320/listening-speaking-reading-writing/","content":"细致阅读●深入思考●笃定践行","tags":["索引页"],"categories":["听说读写"]},{"title":"梦想与现实的平衡","path":"/2024/0320/memo-for-upcoming-post/","content":"备忘录：即将到来的博客文章 主题：梦想与现实的平衡 关键词：梦想, 现实, 平衡 想法： 讨论梦想的重要性 分析现实对梦想的影响 提供实现梦想与现实平衡的策略 参考资料 链接到相关文章或研究 引用的书籍或论文 待办事项 完成对相关研究的阅读 撰写文章草稿 添加必要的图表或图片","tags":["梦想","现实","个人发展"],"categories":["未归类","备忘录"]},{"title":"设置站点框架与主题的说明","path":"/2024/0101/setting-framework-and-theme/","content":"更多关于 Hexo 文件的配置请移步官方文档 https://hexo.io/zh-cn/docs/configurationhttps://hexo.io/zh-cn/docs/configuration 更多关于 Stellar 文件的配置请移步官方文档 https://xaoxuu.com/wiki/stellar/https://xaoxuu.com/wiki/stellar/","tags":["Hexo"],"categories":["经验SOP"]},{"title":"Hello World","path":"/2024/0101/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment 中文指南使用Hexo建立个人博客是一个流行的选择，因为它简单、高效，且拥有丰富的主题和插件。以下是使用Hexo建站的一个基本记录，涵盖了从安装到部署的整个过程。 1. 安装Node.js和Git在开始使用Hexo之前，确保你的计算机上安装了Node.js和Git。Node.js是一个JavaScript运行环境，而Git是一个版本控制系统，它们对于Hexo的安装和使用至关重要。 2. 安装Hexo通过npm（Node.js的包管理器）来安装Hexo。在终端或命令提示符中输入以下命令： 1npm install -g hexo-cli 这将全局安装Hexo命令行界面（CLI）。 3. 创建新的Hexo网站使用以下命令创建一个新的Hexo网站： 123hexo init my-blogcd my-blognpm install 这将创建一个新的文件夹my-blog，其中包含Hexo网站的所有基础文件，并安装所有必需的依赖项。 4. 选择主题Hexo有许多免费和付费的主题可供选择。你可以在Hexo主题列表中挑选一个你喜欢的主题。下载主题后，将其解压到my-blog/themes目录下。 5. 配置网站在my-blog/_config.yml文件中，你可以配置网站的基本信息，如标题、描述、语言等。同时，你还可以在这个文件中配置主题、插件和其他高级设置。 6. 添加文章在my-blog/_posts目录下创建Markdown文件来添加新的文章。文件名格式通常为YYYY-MM-DD-title.md。 7. 生成静态文件在本地预览你的网站之前，需要生成静态文件。使用以下命令： 1hexo generate 8. 本地预览在生成静态文件后，你可以通过以下命令在本地预览你的网站： 1hexo server 这将启动一个本地服务器，你可以在浏览器中输入http://localhost:4000来查看你的网站。 9. 部署到远程服务器Hexo支持多种部署方式，包括GitHub Pages、Heroku、AWS等。你需要在_config.yml文件中配置部署信息。例如，对于GitHub Pages，你需要添加以下配置： 1234deploy: type: git repository: https://github.com/your-username/your-username.github.io.git branch: main 然后，使用以下命令部署你的网站： 1hexo deploy 10. 持续更新和维护建立博客后，定期添加新内容、更新旧文章，并根据需要调整配置和主题。同时，保持对Hexo和相关技术的关注，以便及时更新和维护你的网站。 这就是使用Hexo建立个人博客的基本记录。随着你对Hexo的深入了解，你将能够利用其强大的功能来定制和优化你的博客。","tags":["Hexo"],"categories":["经验SOP"]},{"title":"About","path":"/about/index.html","content":"关于ASunKeyASunKey 是“善启”的英文，意译和谐音都与”Sun Key”差不多，因为SunKey已经被注册过了，所以多加了一个”a”。ASunKey的由来: 几十年前的感悟，并不断完善，得出了“了之、归零、善启”的三个进阶路径。之后选用“善启”作为一个项目名称，英文谐音刚好是“SunKey” ,刚好翻译为”太阳的钥匙“、“太阳之钥”，也暗合通向明光正道的关键点，也是“善启”的本意。“ASunKey”的英文缩写是“ASK” 分类&#x2F;栏目 钱财自足 时间自由 心神自在 听说读写 书摘 书评 经验SOP 未归类 到目前为止已经写了篇文章， 共字。&lt;%&#x3D;totalcount(site) %&gt; 本站访问人数：人次 ， 访问量：次 继续完善中……"},{"title":"收藏","path":"/bookmark/index.html","content":"…"},{"path":"/now/index.html","content":"当下NOW近况与当下 使用Hexo 与GitHub page 构建博客 使用Stellar 作为主题进行更改 最后更新2024年03月21日 now页说明 /now 是展示给别人看的，让别人了解自己的近况，我发现自己完成它时，对于未来的规划又明确了几分。这是一份意外收获。了解 /now 的来源，请看 这里。 Besides answering the common question, “What are you up to these days?”, those who have a now page say it’s a good reminder of their priorities. By publicly showing what you are focused on now, it helps you say no to other requests.除了回答常見問題「你這些天在做什麼？」之外，那些擁有 /now 頁面的人表示，這很好地提醒了他們的優先事項。透過公開展示你現在關注的事情，它可以幫助你對其他要求說不。[注：AI机译] ASunKey到目前为止已经写了篇文章， 共字。 本站访问人数：人次 ， 访问量：次 继续完善中……"},{"title":"友链","path":"/friends/index.html","content":"友链关于小伙伴们如果宇宙中真有什么终极的逻辑，那就是我们终有一天会在舰桥上重逢，直到生命终结。 [2023-12] 友链失联了怎么办?添加友链后如果网站长期无法访问，可能会被取消友链！如果您的网站恢复了，可以在申请友链时创建的那条 issue 中评论告知。 朋友们近期的文章 如何交换友链？ 您的网站应满足以下全部条件： 安全合规：合法的、非营利性、无木马植入的 HTTPS 站点。 非空壳网站：网站内发布至少 五篇 原创文章，内容题材不限。 我们需要有一定的有效互动： 先友后链：与博主有至少 半年 的有效互动，例如 issue 或者评论留言。 [2023-12] 友链申请条件变更说明降低了对商业广告的要求，可以有但是不能太多。提高了「有效互动」的定义：5次更改为半年。 我已满足全部条件，快告诉我如何交换友链！如果您没有满足上述条件，即时提交了申请也不会通过哦～第一步：新建 Issue新建 GitHub Issue 按照模板格式填写并提交。为了提高图片加载速度，建议优化头像：打开 压缩图 上传自己的头像，将图片尺寸调整到 144px 后下载。将压缩后的图片上传到 去不图床 或者其它稳定的图床并使用此图片链接作为头像。第二步：添加友链并等待管理员审核请添加本站到您的友链中：1234title: xxxurl: https://xxx.comavatar: screenshot: 待管理员审核通过，添加了 active 标签后，回来刷新即可生效。如果您需要更新自己的友链，请直接修改 issue 内容，大约 3 分钟内生效，无需等待博客重新部署。"},{"title":"Page","path":"/page/index.html","content":"This is a page test."},{"title":"朋友文章","path":"/friends/rss/index.html","content":""},{"title":"第二大脑主题的博客","path":"/wiki/second-brain/examples.html","content":"Stellar 独创了其它 Hexo 主题所没有的 Wiki 文档系统，可以自动找到一个项目的所有文档分页，生成一个目录树，还可以手动指定顺序、标题、分组，而非依赖文件路径、文件名来排序和显示。 主题色支持 HEX &amp; HSL 表示颜色 blog/_config.stellar.yml1234567891011121314style: ... color: # 动态颜色（会根据明暗主题重设明度值，只用关心色相和饱和度即可） background: &#x27;hsl(212 16% 98%)&#x27; # 浅色背景颜色 block: &#x27;hsl(212 8% 95%)&#x27; # 块背景颜色 code: &#x27;hsl(14 100% 48%)&#x27; # 行内代码颜色 text: &#x27;hsl(0 0% 20%)&#x27; # 文本颜色 # 主题色配置（不会根据明暗动态调整，请设置为通用的颜色） theme: &#x27;hsl(192 98% 55%)&#x27; # 主题色 accent: &#x27;hsl(14 100% 57%)&#x27; # 强调色 link: &#x27;hsl(207 90% 54%)&#x27; # 超链接颜色 button: &#x27;hsl(192 98% 55%)&#x27; # 按钮颜色 hover: &#x27;hsl(14 100% 57%)&#x27; # 按钮高亮颜色 字体 请注意使用字体的版权问题！ 系统字体blog/_config.stellar.yml1234567891011style: font-size: root: 16px body: .9375rem # 15px code: 85% # 14px codeblock: 0.8125rem # 13px font-family: logo: &#x27;system-ui, &quot;Microsoft Yahei&quot;, &quot;Segoe UI&quot;, -apple-system, Roboto, Ubuntu, &quot;Helvetica Neue&quot;, Arial, &quot;WenQuanYi Micro Hei&quot;, sans-serif&#x27; body: &#x27;system-ui, &quot;Microsoft Yahei&quot;, &quot;Segoe UI&quot;, -apple-system, Roboto, Ubuntu, &quot;Helvetica Neue&quot;, Arial, &quot;WenQuanYi Micro Hei&quot;, sans-serif&#x27; code: &#x27;Menlo, Monaco, Consolas, system-ui, &quot;Courier New&quot;, monospace, sans-serif&#x27; codeblock: &#x27;Menlo, Monaco, Consolas, system-ui, &quot;Courier New&quot;, monospace, sans-serif&#x27; 外部字体要想引用外部字体，你需要先在 _config.yml 中 inject 引入 举例，引用 Noto Serif SC 在 _config.stellar.yml 中写入 blog/_config.stellar.yml1234inject: head: - &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Noto+Serif+SC&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt; script: 并在 _config.stellar.yml 中填写你引入的字体名称 blog/_config.stellar.yml123style: font-family: body: &#x27;&quot;Noto Serif SC&quot;, &quot;Microsoft Yahei&quot;,..., sans-serif&#x27; 选择在线字体： https://www.googlefonts.cn/https://www.googlefonts.cn/ 本地字体"},{"title":"第二大脑分页标题","path":"/wiki/second-brain/index.html","content":"Stellar 独创了其它 Hexo 主题所没有的 Wiki 文档系统，可以自动找到一个项目的所有文档分页，生成一个目录树，还可以手动指定顺序、标题、分组，而非依赖文件路径、文件名来排序和显示。"},{"title":"AS这是分页标题","path":"/wiki/stellar/index.html","content":"Stellar 独创了其它 Hexo 主题所没有的 Wiki 文档系统，可以自动找到一个项目的所有文档分页，生成一个目录树，还可以手动指定顺序、标题、分组，而非依赖文件路径、文件名来排序和显示。"},{"title":"AS使用 Stellar 主题的博客","path":"/wiki/stellar/examples.html","content":"Stellar 独创了其它 Hexo 主题所没有的 Wiki 文档系统，可以自动找到一个项目的所有文档分页，生成一个目录树，还可以手动指定顺序、标题、分组，而非依赖文件路径、文件名来排序和显示。 主题色支持 HEX &amp; HSL 表示颜色 blog/_config.stellar.yml1234567891011121314style: ... color: # 动态颜色（会根据明暗主题重设明度值，只用关心色相和饱和度即可） background: &#x27;hsl(212 16% 98%)&#x27; # 浅色背景颜色 block: &#x27;hsl(212 8% 95%)&#x27; # 块背景颜色 code: &#x27;hsl(14 100% 48%)&#x27; # 行内代码颜色 text: &#x27;hsl(0 0% 20%)&#x27; # 文本颜色 # 主题色配置（不会根据明暗动态调整，请设置为通用的颜色） theme: &#x27;hsl(192 98% 55%)&#x27; # 主题色 accent: &#x27;hsl(14 100% 57%)&#x27; # 强调色 link: &#x27;hsl(207 90% 54%)&#x27; # 超链接颜色 button: &#x27;hsl(192 98% 55%)&#x27; # 按钮颜色 hover: &#x27;hsl(14 100% 57%)&#x27; # 按钮高亮颜色 字体 请注意使用字体的版权问题！ 系统字体blog/_config.stellar.yml1234567891011style: font-size: root: 16px body: .9375rem # 15px code: 85% # 14px codeblock: 0.8125rem # 13px font-family: logo: &#x27;system-ui, &quot;Microsoft Yahei&quot;, &quot;Segoe UI&quot;, -apple-system, Roboto, Ubuntu, &quot;Helvetica Neue&quot;, Arial, &quot;WenQuanYi Micro Hei&quot;, sans-serif&#x27; body: &#x27;system-ui, &quot;Microsoft Yahei&quot;, &quot;Segoe UI&quot;, -apple-system, Roboto, Ubuntu, &quot;Helvetica Neue&quot;, Arial, &quot;WenQuanYi Micro Hei&quot;, sans-serif&#x27; code: &#x27;Menlo, Monaco, Consolas, system-ui, &quot;Courier New&quot;, monospace, sans-serif&#x27; codeblock: &#x27;Menlo, Monaco, Consolas, system-ui, &quot;Courier New&quot;, monospace, sans-serif&#x27; 外部字体要想引用外部字体，你需要先在 _config.yml 中 inject 引入 举例，引用 Noto Serif SC 在 _config.stellar.yml 中写入 blog/_config.stellar.yml1234inject: head: - &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Noto+Serif+SC&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt; script: 并在 _config.stellar.yml 中填写你引入的字体名称 blog/_config.stellar.yml123style: font-family: body: &#x27;&quot;Noto Serif SC&quot;, &quot;Microsoft Yahei&quot;,..., sans-serif&#x27; 选择在线字体： https://www.googlefonts.cn/https://www.googlefonts.cn/ 本地字体"},{"title":"探索","path":"/explore/index.html","content":"…"}]